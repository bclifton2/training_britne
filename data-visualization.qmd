---
title: "data-visualization"
author: "B Clifton"
format: html
editor: visual
---
```{r}
library(readr)
library(dplyr)
library(tidyr)
library(forcats) # makes working with factors easier
library(ggplot2)
library(leaflet) # interactive maps
library(DT) # interactive tables
library(scales) # scale functions for visualization
library(janitor) # expedite cleaning and exploring data
library(viridis) # colorblind friendly color pallet
```


```{r}
delta_visits <- read_csv("https://portal.edirepository.org/nis/dataviewer?packageid=edi.587.1&entityid=cda8c1384af0089b506d51ad8507641f") %>% 
    janitor::clean_names() ## Introducing this new package!
```


```{r}
## Check out column names
colnames(delta_visits)

## Peak at each column and class
glimpse(delta_visits)

## From when to when
range(delta_visits$date)

## First and last rows
head(delta_visits)
tail(delta_visits)

## Which time of day?
unique(delta_visits$time_of_day)
```


```{r}
visits_long <- delta_visits %>% 
    pivot_longer(cols = c("sm_boat", "med_boat", "lrg_boat", "bank_angler", "scientist", "cars"),
                 names_to = "visitor_type",
                 values_to = "quantity") %>%
    rename(restore_loc = eco_restore_approximate_location) %>% 
    select(-notes)

## Checking the outcome
head(visits_long)
```


```{r}
daily_visits_loc <- visits_long %>%
    group_by(restore_loc, date, visitor_type) %>% 
    summarise(daily_visits = sum(quantity))
    
head(daily_visits_loc)
```


```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()
```

```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during July 2017 and March 2018")+
    coord_flip()+
    theme_bw()
```

## learning about themes and how they influence the look of a graph

```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    theme_bw()+
    theme(legend.position = "bottom",
          axis.ticks.y = element_blank()) ## note we mention y-axis here
```

## but what if i want my own theme? Saving theme into an object


```{r}
my_theme <- theme_bw(base_size = 16) +
    theme(legend.position = "bottom",
          axis.ticks.y = element_blank())
```

```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    my_theme
```

```{r}
ggplot(data = daily_visits_loc,
       aes(x = restore_loc, y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    
    coord_flip() +
    scale_y_continuous(breaks = seq(0,120, 20)) +
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    my_theme
```

```{r}
ggplot(data = daily_visits_totals,
       aes(x = fct_reorder(restore_loc, n), y = daily_visits,
           fill = visitor_type))+
    geom_col()+
    labs(x = "Restoration Location",
         y = "Number of Visits",
         fill = "Type of Visitor",
         title = "Total Number of Visits to Delta Restoration Areas by visitor type",
         subtitle = "Sum of all visits during study period")+
    coord_flip()+
    scale_y_continuous(breaks = seq(0,120, 20), expand = c(0,0))+
    my_theme
```



## interactive things!

```{r}
locations <- visits_long %>%
    distinct(restore_loc, .keep_all = T) %>%
    select(restore_loc, latitude, longitude)

head(locations)
```

```{r}
datatable(locations)
```


```{r}
leaflet(locations) %>%
    addTiles() %>%
    addMarkers(
        lng = ~ longitude,
        lat = ~ latitude,
        popup = ~ restore_loc
    )
```


```{r}
leaflet(locations) %>%
    addWMSTiles(
        "https://basemap.nationalmap.gov/arcgis/services/USGSTopo/MapServer/WmsServer",
        layers = "0",
        options = WMSTileOptions(format = "image/png", transparent = TRUE)) %>%
    addCircleMarkers(
        lng = ~ longitude,
        lat = ~ latitude,
        popup = ~ restore_loc,
        radius = 5,
        # set fill properties
        fillColor = "salmon",
        fillOpacity = 1,
        # set stroke properties
        stroke = T,
        weight = 0.5,
        color = "white",
        opacity = 1)
```





